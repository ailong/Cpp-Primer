**************************************************************************************************************************************************************
Ex4.1:
105



**************************************************************************************************************************************************************
Ex4.2:
(*vec).begin()
(*vec).begin() + 1
 


**************************************************************************************************************************************************************
Ex4.3:
开发程序之初要设计考虑周全，然后在程序正确的基础上考虑效率问题；



**************************************************************************************************************************************************************
Ex4.4:
((((12 / 3) * 4) + (5 * 15)) + ((24 % 4) / 2)) = 91



**************************************************************************************************************************************************************
Ex4.5:
-86
-18
0
-2



**************************************************************************************************************************************************************
Ex4.7:
出现了值的溢出overflow，例如：
short i = 10000000000000000;
char i = 'asdfgh';
unsigned i = -1;



**************************************************************************************************************************************************************
Ex4.8:
AND 先计算左边，如果是0，不计算右边
OR 先计算左边，如果是1，不计算右边
== 两边都计算，最后比较



**************************************************************************************************************************************************************
Ex4.9:
判断cp是否合法以及它指向的内容是否是空



**************************************************************************************************************************************************************
Ex4.12:
k总是和0或者1比较，如果i和j相等，那么k和1比较，否则k和0比较大小



**************************************************************************************************************************************************************
Ex4.13:
(a)    i = 3, d = 3.0
(b)   d = 3.5, i = 3



**************************************************************************************************************************************************************
Ex4.14:
if(42=i)出错
if(i=42)永远是true值，if起不到作用



**************************************************************************************************************************************************************
Ex4.15:
不能用指针给double和int类型的变量赋值
修改成单独的行即可



**************************************************************************************************************************************************************
Ex4.16:
if ((p = getPtr()) != 0)
if (i == 1024)



**************************************************************************************************************************************************************
Ex4.17:
前缀：直接修改值之后返回
后缀：返回后修改值



**************************************************************************************************************************************************************
Ex4.18:
会出错，会解引用到最后一个迭代器的下一个值



**************************************************************************************************************************************************************
Ex4.19:
(a) 正确
(b) 正确
(c) 值不确定；有可能出错，超出最大索引值



**************************************************************************************************************************************************************
Ex4.20:
(a)正确
(b)错误，string没有++操作符
(c)错误，迭代器没有empty方法
(d)正确
(e)错误，string没有++操作符
(f)正确



**************************************************************************************************************************************************************
Ex4.23:
string pl = s + (s[s.size() - 1] == 's' ? "" : "s");



**************************************************************************************************************************************************************
Ex4.24:
如果是左结合，那么相当于判断cin的状态是否是合法的来决定是否是pass



**************************************************************************************************************************************************************
Ex4.25:
8-bit
32-bit



**************************************************************************************************************************************************************
Ex4.27:
(a) 3 (011&111 = 011)
(b) 7 (011 | 111 = 111)
(c) 1
(d) 1



**************************************************************************************************************************************************************
Ex4.29:
10
2 (On my Win8-AMD64bit Machine)



**************************************************************************************************************************************************************
Ex4.30:
(a)4
(d)1



**************************************************************************************************************************************************************
Ex4.31:
使用后置的++和--并没有什么问题



**************************************************************************************************************************************************************
Ex4.32:
遍历整个数组



**************************************************************************************************************************************************************
Ex4.33:
((someValue) ? ++x, ++y : --x), --y



**************************************************************************************************************************************************************
Ex4.34:
(a) fval转换为bool
(b)ival先转换为float，结果转换为double
(c)结构转换为double



**************************************************************************************************************************************************************
Ex4.35:
(a) 先转换为int再转换为char
(b) 先转换为double，再转换为float
(c) 转换为double
(d) 转换为double，再转换为char



**************************************************************************************************************************************************************
Ex4.37:
(a) static_cast
(b) static_cast
(c) static_cast
(d) static_cast



**************************************************************************************************************************************************************
4.38:
将i和j相除的结果强制转换为double类型