**************************************************************************************************************************************************************
Ex2.1:类型int、long、long long和short的区别是所占的比特数不一样，因此所能表达的数据范围也不一样。
无符号类型和有符号类型的区别是：无符号类型仅能表达大于等于0的数；而有符号类型可以表达正数、负数或0。
float和double的都是浮点数，float表示单精度浮点数，以1个字节（32比特）来表示，有6位有效数字；而double表示双精度浮点数，以2个字节（64比特）来表示，有10位有效数字。


**************************************************************************************************************************************************************
Ex2.2:计算按揭贷款时，利率可以应使用double类型，利率一般是一个比较小的浮点数，而且需要的精确度高，来保证计算贷款的精确度，来保证不会产生在大数额积累产生大的误差。本金和付款，应使用float类型，对金额的有效位基本为2或3位而言，float类型足以满足误差需求。


**************************************************************************************************************************************************************
Ex2.3:结果依次为：32、4294967264、32、-32、0、0


**************************************************************************************************************************************************************
Ex2.5:结果依次为：
(a)char    Wchar-t    char[2]    Wchar-t[2]
(b)int     char16-t     long     unsigned long    int    int 
(c)double       float       long double
(d)int      unsigned int     double      double


**************************************************************************************************************************************************************
Ex2.6:结果依次为：有区别
第一行定义为10进制的int类型，第二行定义的是8进制的int类型


**************************************************************************************************************************************************************
Ex2.7:结果依次为：
(a)字符串    Who goes with F\145rgus?\012   \145和\012是转义字符
(b)3.14(double类型字面值)
(c)1024f(float类型字面值)
(d)3.14(long double类型字面值)


**************************************************************************************************************************************************************
Ex2.9:结果依次为：
(a)非法：>>运算符后面不能进行变量定义。改为： int input_value;std::cin >> input_value;
(b)错误：精确度降低
(c)非法：不能连等赋值，wage是否定义
(d)错误：精确度降低


**************************************************************************************************************************************************************
Ex2.10:结果依次为：
""    0    0    ""


**************************************************************************************************************************************************************
Ex2.11:结果依次为：
声明    声明并定义    声明并定义


**************************************************************************************************************************************************************
Ex2.12:结果依次为：
(a)非法
(b)合法
(c)非法
(d)非法
(e)合法


**************************************************************************************************************************************************************
Ex2.13:结果为：
100


**************************************************************************************************************************************************************
Ex2.14:结果依次为：
合法    输出为100,45


**************************************************************************************************************************************************************
Ex2.15:结果依次为：
（b）引用类型的初始值必须为一个对象；(d)引用必须初始化


**************************************************************************************************************************************************************
Ex2.16:结果依次为：
(a)合法；   d = 3.14159;   赋值；
(b)合法；   &r2=i;   赋值；
(c)合法；   i = d；
(d)合法;    &r1 = d;


**************************************************************************************************************************************************************
Ex2.17:结果依次为：
10,10



**************************************************************************************************************************************************************
Ex2.19:区别为：
指针是一个对象；而引用不是一个对象


**************************************************************************************************************************************************************
Ex2.20:
i=42*42


**************************************************************************************************************************************************************
Ex2.21:
(a)非法，试图把int类型对象的地址赋给double型指针


**************************************************************************************************************************************************************
Ex2.22:结果依次为：
判断p是否是空指针
判断p指向地址的值是否是0


**************************************************************************************************************************************************************
Ex2.23:结果依次为：
不能，只能判断是否为空指针。不知道指向，无法确定指针是否指向一个合法的对象。


**************************************************************************************************************************************************************
Ex2.24:
试图把int类型对象的地址赋给double型指针


**************************************************************************************************************************************************************
Ex2.25:结果依次为：
(a)ip为指针，值不确定；i为int型 值为0；r是i的引用  值为0。
(b)i为int型 值为0；ip为空指针，值为0。
(c)ip为指针，值不确定；ip2为int型 值为0


**************************************************************************************************************************************************************
Ex2.26:结果依次为：
(a)const对象必须初始化
(d)const对象不能修改


**************************************************************************************************************************************************************
Ex2.27:结果依次为：
(a)非法：引用的初始化对象必须是对象
(b)正确：
(c)正确：常量引用可以直接初始化非变量
(d)正确：
(e)正确：
(f)非法：常量必须初始化
(g)正确:


**************************************************************************************************************************************************************
Ex2.28:结果依次为：
(a) 错误，常量指针必须初始化
(b) 错误，常量指针必须初始化
(c) 错误，常量变量必须初始化
(d) 错误，指向常量的常量指针必须初始化
(e) 正确，指向常量的指针


**************************************************************************************************************************************************************
Ex2.29:结果依次为：
(a) 正确，变量赋值为常量的值
(b) 错误，指向常量的指针不能赋于非常量的指针
(c) 错误，变量指针不能指向常量变量
(d) 错误，不能改变常量指针的值
(e) 错误，不能改变常量指针的值
(f) 错误，常量的值不能被改变


**************************************************************************************************************************************************************
Ex2.30:结果依次为：
const int v2 = 0;     ：顶层const
int v1 = v2;
int *p1 = v1,&r1 = v1;
const int *p2 = &v2,     ：底层const
*const p3 = &i,      ：顶层const和底层const
&r2 = v2;


**************************************************************************************************************************************************************
Ex2.31:结果依次为：
r1 = v2;  正确： 人r1 引用的是普通变量
p1 = p2;  错误： 指向常量的指针不能被赋予普通指针
p2 = p1;  正确： 底层指针可以修改指向
p1 = p3;  错误： 指向常量的指针不能被赋予普通指针
p2 = p3;  正确： 底层指针可以修改指向


**************************************************************************************************************************************************************
Ex2.32:：
错误；可以是 constexpr int *null = 0, *p = null;


**************************************************************************************************************************************************************
Ex2.33:结果依次为：
a = 42;
b = 42;
c = 42;
d = 42;  错误： 不能直接给指针赋值
e = 42;  错误： 不能直接给指针赋值
g = 42;  错误： 不能给常量引用赋值


**************************************************************************************************************************************************************
Ex2.35:结果依次为：
const int i = 32;
auto j = i;   //int
const auto &k = i;   //const int &k
auto *p = &i;   // const int *p
const auto j2 = i, &k2 = i;   // j2 const int, k2 const int &k2


**************************************************************************************************************************************************************
Ex2.36:结果依次为：
int a= 3, b = 4;
decltype(a) c = a;  // c是int
decltype((b)) d = a;  //d是int &
++c;
++d;


**************************************************************************************************************************************************************
Ex2.37:结果依次为：
int a= 3, b = 4;
decltype(a) c = a;  // c是int
decltype(a = b) d = a;  //d是int &


**************************************************************************************************************************************************************
Ex2.38:结果依次为：
int a = 3,b = 4;
auto c = a;   //int
auto d = (a = b);  //int


**************************************************************************************************************************************************************
Ex2.39:结果依次为：
struct Foo{}
   int main()
   {
     return 0;
   }

错误：结构定义后需要‘;’